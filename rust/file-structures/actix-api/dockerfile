# syntax=docker/dockerfile:1.2

# Use a specific version of the Rust image to compile our application.
FROM rust:1.56.1 as builder

# Add the MUSL target required for Alpine
RUN rustup target add x86_64-unknown-linux-musl

# Create a new empty shell project
RUN USER=root cargo new --bin actix_api
WORKDIR /actix_api

# Copy the Cargo manifest files into the new project directory
COPY ./Cargo.toml ./Cargo.toml
COPY ./Cargo.lock ./Cargo.lock

# Build only the dependencies to cache them
RUN cargo build --release --target x86_64-unknown-linux-musl
RUN rm src/*.rs

# Copy the source code
COPY ./src ./src

# Build the application
RUN cargo build --release --target x86_64-unknown-linux-musl

# Use the Alpine Linux image for the final runtime
FROM alpine:3.14

# Copy the statically-linked executable from the builder stage
COPY --from=builder /actix_api/target/x86_64-unknown-linux-musl/release/actix_api /usr/local/bin/

# Set the CMD to your executable
CMD ["actix_api"]
