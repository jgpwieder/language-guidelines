# Compiled files
/target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here: http://doc.crates.io/guide.html#cargotoml-vs-cargolock
Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# These are swap files generated by the editor
.*.swp
*~

# MSVC Windows builds of rustc generate these, which include debugging information
**/*.pdb

# The directory `.rustup` and `.cargo` stores Rust versions and installed crates respectively.
# These can be recreated with `rustup update` and `cargo install`.
/.rustup/
# /.cargo/

# The `node_modules` directory is typically used by projects that also include front-end components.
/node_modules/

# Environment configuration files such as .env used for managing environment variables.
.env
.env.*

# RLS (Rust Language Server) directory
/rls/

# This is the directory that `cargo doc` stores its output. 
# This can be regenerated by running `cargo doc`.
/doc/

# If using a coverage tool, you might want to ignore the output
/coverage/
kcov/

# Ignore Vim temporary files
*.swp
*.swo

# Ignore Emacs temporary files
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
.elc
auto-save-list
tramp
.\#*

# Ignore JetBrains IDEs project files
.idea/
*.iml
*.iws
*.ipr

# Ignore Visual Studio Code files
.vscode/

# Ignore database files that might be used in development.
*.db
*.sql
*.sqlite

# Ignore OS-specific files
.DS_Store
Thumbs.db
